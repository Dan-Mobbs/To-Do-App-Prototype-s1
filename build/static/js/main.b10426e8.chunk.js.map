{"version":3,"sources":["Stores/Userstore.js","InputField.js","SubmitBtn.js","LoginForm.js","App.js","index.js"],"names":["Userstore","extendObservable","this","loading","isLoggedin","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitBtn","text","disabled","onClick","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","passowrd","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","isLoggedIn","resetFrom","alert","msg","console","log","vaule","setInputValue","disable","doLogin","href","App","doLogOut","observer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b10426e8.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass Userstore {\r\n    constructor() {\r\n        \r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedin: false,\r\n            username: ''\r\n        \r\n        })\r\n    }\r\n}\r\n\r\nexport default Userstore;","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n          <div className=\"InputField\">\r\n            <input\r\n              className='form-control form-control-user'\r\n              type={this.props.type}\r\n              placeholder={this.props.placeholder}\r\n              value={this.props.value}\r\n              onChange={ (e) => this.props.onChange(e.target.value) }       \r\n            />   \r\n          </div>\r\n        )  \r\n      };\r\n  \r\n  }\r\n  \r\n  export default InputField;\r\n  \r\n\r\n","import React from 'react';\r\n\r\nclass SubmitBtn extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n          <div className=\"SubmitBtn\">\r\n            <button\r\n            text=\"Login\"\r\n             className={ \"btn btn-primary btn-user btn-block\" }\r\n             disabled={ this.props.disabled }\r\n             onClick={ () => this.props.onClick() }>\r\n             {this.props.text}               \r\n            </button> \r\n          </div>\r\n        )  \r\n      };\r\n  \r\n  }\r\n  \r\n  export default SubmitBtn;\r\n  ","import React from 'react';\r\nimport InputField from './InputField.js';\r\nimport SubmitBtn from './SubmitBtn.js';\r\nimport UserStore from './Stores/Userstore.js';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          username: '',\r\n          password: '',\r\n          buttonDisabled: false\r\n      }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n      val = val.trim();\r\n      if (val.length > 12) {\r\n        return;\r\n      }\r\n      this.setState({\r\n          [property]: val\r\n      })\r\n    }\r\n\r\n    resetFrom() {\r\n      this.setState({\r\n        username: '',\r\n        passowrd: '',\r\n        buttonDisabled: false\r\n      })\r\n    }\r\n\r\n\r\n   async doLogin() {\r\n\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n\r\n    try {\r\n\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n\r\n      else if (result && result.success === false ) {\r\n        this.resetFrom();\r\n        alert(result.msg);\r\n      }\r\n    }\r\n\r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetFrom();\r\n\r\n    }\r\n\r\n   }\r\n    \r\n    render() {\r\n        return (   \r\n\r\n              <div className=\"row justify-content-center\">\r\n\r\n                  <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n\r\n                      <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                          <div className=\"card-body p-0\">\r\n                              <div className=\"row\">\r\n                                  <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\r\n                                  <div className=\"col-lg-6\">\r\n                                      <div className=\"p-5\">\r\n                                          <div className=\"text-center\">\r\n                                              <h1 className=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\r\n                                          </div>\r\n                                          <form className=\"user\">\r\n                                              <div className=\"form-group\">\r\n                                                <InputField type=\"text\" vaule={this.state.username ? this.state.username : ''} placeholder=\"Username\" onChange={ (val) => this.setInputValue('username', val) } />\r\n                                              </div>\r\n                                              <div className=\"form-group\">\r\n                                                <InputField type=\"password\" value={this.state.password ? this.state.password : ''} placeholder=\"Enter Password\" onChange={ (val) => this.setInputValue('password', val) } />       \r\n                                              </div>\r\n                                              <div className=\"form-group\">\r\n                                                  <div className=\"custom-control custom-checkbox small\">\r\n                                                      {/* <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck\">\r\n                                                      <label className=\"custom-control-label\" for=\"customCheck\">Remember\r\n                                                          Me</label> */}\r\n                                                  </div>\r\n                                              </div>\r\n                                                <SubmitBtn text=\"Login\" disable={this.state.buttonDisabled} onClick={ () => this.doLogin} />\r\n                                              <hr />\r\n                                              <a href=\"index.html\" className=\"btn btn-google btn-user btn-block\">\r\n                                                  <i className=\"fab fa-google fa-fw\"></i> Login with Google\r\n                                              </a>\r\n                                              <a href=\"index.html\" className=\"btn btn-facebook btn-user btn-block\">\r\n                                                  <i className=\"fab fa-facebook-f fa-fw\"></i> Login with Facebook\r\n                                              </a>\r\n                                          </form>\r\n                                          <hr />\r\n                                          <div className=\"text-center\">\r\n                                              <a className=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\r\n                                          </div>\r\n                                          <div className=\"text-center\">\r\n                                              <a className=\"small\" href=\"register.html\">Create an Account!</a>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n\r\n                  </div>\r\n              </div> \r\n\r\n        )  \r\n    };  \r\n}\r\n  \r\n  export default LoginForm;\r\n  ","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './Stores/Userstore.js';\nimport LoginForm from './LoginForm.js';\nimport InputField from './InputField.js';\nimport SubmitBtn from './SubmitBtn.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n\n    try {\n\n        let res = await fetch('/isLoggedIn', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n        });\n\n        let result = await res.json();\n\n        if (result && result.success) {\n          UserStore.loading = false;\n          UserStore.isLoggedIn = true;\n          UserStore.username = result.username;\n        } else {\n          UserStore.loading = false;\n          UserStore.isLoggedIn = false;\n        }\n    }\n\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogOut() {\n\n    try {\n\n        let res = await fetch('/logout', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n        });\n\n        let result = await res.json();\n\n        if (result && result.success) {          \n          UserStore.isLoggedIn = true;\n          UserStore.username = '';\n        } \n    }\n\n    catch(e) {\n      console.log(e);\n    }\n  }  \n          \n  render() {\n\n      if (UserStore.loading) {\n        return (\n          <div className=\"app\">\n            <div className='container'>\n              Loading, please wait...\n            </div>\n          </div>  \n        )\n      }\n\n      else {\n        if (UserStore.isLoggedIn) {\n          return (\n            <div className=\"app\">\n              <div className='container'>\n                Welcome {UserStore.username}\n\n                <SubmitBtn\n                  text={ 'Log Out' }\n                  disabled={ false }\n                  onClick={ () => this.doLogOut() }\n                />\n\n              </div>\n            </div>  \n          );\n        }    \n\n      return (\n        <div className=\"app\">\n          <div className=\"container\">          \n            <LoginForm />  \n          </div>  \n        </div>\n      );  \n\n    }\n\n  }  \n\n}\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}